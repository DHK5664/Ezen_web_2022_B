
// - 함수 호출
	// 1. 호출할 함수의 이름이 존재
	
	/*
			   복권 : 1000원
				
		유재석				강호동{
		 -------1000:인수------>
							로직[추첨]
							
		<------==꽝:반환값-------꽝
							}
			유재석	
			let 추첨결과 = 로또구매(1000) ---> 추후 필요하면 let 써서 기억하기				
				
			강호동이	
			function 로또구매( 돈 )		-------> 로또 구매때만(실행중일때만) 메모리 사용되므로 효율이 좋음.
				추첨
				return 추첨결과 꽝		--> 유재석에게	알려줌 (반환)	
				
				
				
				
			
				
				
	*/
	
	/*
		1. 인수X 반환X 함수
				
				정의								-호출
				function 함수명(){				함수명()
					
					
				}
	
		2. 인수O 반환X 함수
		
		
				정의
				function 함수명( x ){				-호출
												함수명( x )
					
				}
	
	
		3. 인수X 반환O 함수
		
				정의
				function 함수명(){				-호출
					return 3					let result = 함수명( )
					
				}
	
	
		4. 인수O 반환O 함수
		
				정의
				function 함수명( x ){				-호출
					return 3				let result = 함수명( 3 )
					
				}
	*/

//1. 인수가 없는 함수 선언	
function 함수1(){// 함수 시작
	console.log('함수1 실행')
}// 함수 끝

//1. js에서 함수 호출[함수호출 : 함수명()]
함수1()

//2. 인수가 1개인 함수 선언
function 함수2( x ){
	console.log('함수2 실행 인수:' + x)
}

//2. js에서 함수 호출
함수2( 7 )

//3. 인수가 2개인 함수 선언
function 함수3( x , y ){
	console.log('함수3 실행 인수 : ' + (x + y) )
}

//3. js에서 함수호출
함수3( 5, 7 )

//4. 반환이 있는 함수 선언
function 함수4(x ,y, z){
	let result = x + y + z
	return result;
}
//4. js에서 함수 호출
함수4( 1 , 2 , 3 ) //??? 반환 후에 코드가 없다.
let result = 함수4(1,2,3)	// -- 반환된값을 result라는 변수에 저장
console.log ('함수4 반환 : ' + 함수4(1,2,3))//-- 반환값 출력
































